# -*- coding: utf-8 -*-
"""oibsip-task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iSlOm07oKui3L-pB8ZFZYzdCusXu_-98
"""

'''
Authored by TTshimo
Date: 20/02/2024
'''

"""# **LIBRARY IMPORTATION**"""

import matplotlib as mpl
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

"""# **LOADING THE DATASET INTO THE PROGRAM**"""

dataframe = 'Advertising.csv'

data = pd.read_csv(dataframe)
data.head(5)

"""# **DATA CLEANING**"""

# Dropping unnecessary column
data = data.loc[:, ~data.columns.str.contains('^Unnamed')]
data.head(5)

"""# **DATA DESCRIPTION**"""

print('DATA INFORMATION\n' , data.info())

print('DATA DESCPRITION \n', data.describe())

print('DATA SHAPE \n', data.shape)

"""# **Exploratory Data Analysis With Visualizations**

## **1. Sales Statistically Representation (Stats excluded by the describe method above)**
"""

# Additional Statistics
median = data['Sales'].median()
mode = data['Sales'].mode().iloc[0]

# Printing Results
print("\nAdditional Statistics")
print("Median:", median)
print("Mode:", mode)

"""## **2. TV x Radio x Sales**"""

sum_of_tv_sales = round(data['TV'].sum(), 2)
sum_of_radio_sales = round(data['Radio'].sum(), 2)

print("Sum of sales for TV:", sum_of_tv_sales)
print("Sum of sales for Radio:", sum_of_radio_sales)

"""**Visualization**"""

labels = ['TV', 'Radio']
sizes = [sum_of_tv_sales, sum_of_radio_sales]
plt.figure(figsize=(8, 6))
plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=140)
plt.axis('equal')
plt.title('COMPARISON OF TV AND RADIO SALES')
plt.show()

"""## **3. TV x Newspaper x Sales**"""

sum_of_tv_sales = round(data['TV'].sum(), 2)
sum_of_newspaper_sales = round(data['Newspaper'].sum(), 2)

print("Sum of sales for TV:", sum_of_tv_sales)
print("Sum of sales for newspaper:", sum_of_newspaper_sales)

"""**Visualization**"""

categories = ['TV', 'Newspaper']
sales_data = [sum_of_tv_sales, sum_of_newspaper_sales]
colors = ['purple', 'blue']
plt.figure(figsize=(8, 6))
plt.bar(categories, sales_data, color=colors)
plt.title('COMPARISON OF TV AND NEWSPAPER SALES')
plt.xlabel('Category')
plt.ylabel('Total Sales')
plt.show()

"""## **4. Radio x Newspaper x Sales**"""

sum_of_radio_sales = round(data['Radio'].sum(), 2)
sum_of_newspaper_sales = round(data['Newspaper'].sum(), 2)

print("Sum of sales for Radio:", sum_of_radio_sales)
print("Sum of sales for newspaper:", sum_of_newspaper_sales)

plt.figure(figsize=(6, 4))
plt.barh(['Newspaper', 'Radio'], [sum_of_newspaper_sales, sum_of_radio_sales], color=['purple', 'red'])
plt.title('COMPARISON OF NEWSPAPER AND RADIO SALES')
plt.xlabel('Total Sales')
plt.ylabel('Category')
plt.grid(True)
plt.show()

"""## **5. TV x Radio x Newspaper x Sales**"""

print("Sum of sales for TV:", sum_of_tv_sales)
print("Sum of sales for Radio:", sum_of_radio_sales)
print("Sum of sales for newspaper:", sum_of_newspaper_sales)

sales_sums = [sum_of_tv_sales, sum_of_radio_sales, sum_of_newspaper_sales]
sales_labels = ['TV Sales', 'Radio Sales', 'Newspaper Sales']
colors = ['orange', 'blue', 'green']
plt.figure(figsize=(8, 8))
plt.pie(sales_sums, labels=sales_labels, colors=colors, autopct='%1.1f%%', startangle=140)
plt.title('Distribution of Sales')
plt.show()

"""**Correlation**"""

correlation_matrix = data.corr()
print(correlation_matrix)

plt.figure(figsize=(8, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('CORRELATION HEATMAP')
plt.show()